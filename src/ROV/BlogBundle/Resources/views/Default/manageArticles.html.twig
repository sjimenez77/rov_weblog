{% extends '::frontend_bootstrap.html.twig' %}

{% block title %}{{ 'Manage articles'|trans }}{% endblock %}

{% block body %}
	{{ parent() }}

<div class="container">
	<div class="row">
		<div class="col-lg-12">
			<h1 class="page-header">Blog <small>{{ 'Manage articles'|trans }}</small></h1>
			<ol class="breadcrumb">
				<li><a href="{{ path('home') }}">{{ 'Home'|trans }}</a></li>
				<li class="active">{{ 'Manage articles'|trans }}</li>
			</ol>
		</div>
	</div>

	<div class="row">
		<div class="col-lg-12">
			{# Flashbag session success messages #}
			{% for message in app.session.flashbag.get('error') %}
			<div class="alert alert-danger">{{ message|trans }}</div>
			{% endfor %}
			{% for message in app.session.flashbag.get('success') %}
			<div class="alert alert-success">{{ message|trans }}</div>
			{% endfor %}
			<div class="row">
				<div class="col-md-9">
					{# Mostrar los art√≠culos #}
					<h2>{{ 'Articles list'|trans }}</h2>
					<hr>
					{% if articles|length > 0 %}
					<div class="table-responsive">
						<table>
							<thead>
								<tr>
									<th>ID</th>
									<th>{{ 'Title'|trans }}</th>
									<th>{{ 'Created'|trans }}</th>
									<th>{{ 'Last updated'|trans }}</th>
									<th>{{ 'Options'|trans }}</th>
								</tr>
							</thead>
							<tfoot>
								<tr>
									<th>ID</th>
									<th>{{ 'Title'|trans }}</th>
									<th>{{ 'Created'|trans }}</th>
									<th>{{ 'Last updated'|trans }}</th>
									<th>{{ 'Options'|trans }}</th>
								</tr>
								<tr>
									<th colspan="5" class="ts-pager form-horizontal">
										<button type="button" class="btn first"><i class="icon-step-backward glyphicon glyphicon-step-backward"></i></button>
										<button type="button" class="btn prev"><i class="icon-arrow-left glyphicon glyphicon-backward"></i></button>
										<span class="pagedisplay"></span> <!-- this can be any element, including an input -->
										<button type="button" class="btn next"><i class="icon-arrow-right glyphicon glyphicon-forward"></i></button>
										<button type="button" class="btn last"><i class="icon-step-forward glyphicon glyphicon-step-forward"></i></button>
										<select class="pagesize input-mini" title="{{ 'Select page size'|trans }}">
											<option selected="selected" value="10">10</option>
											<option value="20">20</option>
											<option value="30">30</option>
											<option value="40">40</option>
										</select>
										<select class="pagenum input-mini" title="{{ 'Select page number'|trans }}"></select>
									</th>
								</tr>
							</tfoot>

							<tbody>
								{% for article in articles %}
								<tr>
									<td>{{ article.id }}</td>
									<td>{{ article.title }}</td>
									{% if app.request.locale == 'es' %}
									<td>{{ article.created|localizeddate('medium', 'medium', locale, "Europe/Madrid") }}</td>
									<td>{{ article.updated|localizeddate('medium', 'medium', locale, "Europe/Madrid") }}</td>
									{% else %}
									<td>{{ article.created|date("F jS \\a \\t g:ia", "Europe/Madrid") }}</td>
									<td>{{ article.updated|date("F jS \\a \\t g:ia", "Europe/Madrid") }}</td>
									{% endif %}
									<td>
										<a class="btn btn-default btn-xs" href="{{ path('rov_blog_edit_article', { 'article_id': article.id }) }}" role="button">{{ 'Edit'|trans }}</a>
										{# <a class="btn btn-default btn-xs" href="{{ path('rov_blog_delete_article', { 'article_id': article.id }) }}" role="button">{{ 'Delete'|trans }}</a> #}
									</td>
								</tr>
								{% endfor %}
							</tbody>
						</table>
					</div>
					{% else %}
					<div class="alert alert-info">
						<h4>{{ 'There are not any article yet!'|trans }}</h4>
					</div>
					{% endif %}
				</div>
				<br class="visible-xs visible-sm">
				<div class="col-md-3">
					<div class="well">
						<h4>{{ 'Categories'|trans }}</h4>
						<div class="row">
							{% set length = categories|length %}
							{% if length > 0 %}
							<div class="col-lg-6">
								<ul class="list-unstyled">
							{% for category in categories|slice(0, (length / 2)|round) %}
									<li><a href="#">{{ category.name|trans }}</a></li>
							{% endfor %}
								</ul>
							</div>
							<div class="col-lg-6">
								<ul class="list-unstyled">
							{% for category in categories|slice((length / 2)|round, length) %}
									<li><a href="#">{{ category.name|trans }}</a></li>
							{% endfor %}
								</ul>
							</div>
							{% else %}
							<div class="col-lg-12">
								<p>{{ 'There are no categories yet'|trans }}</p>
							</div>
							{% endif %}
						</div>
						<!-- Button trigger modal -->
						<button class="btn btn-primary btn-block" data-toggle="modal" data-target="#newCategory" style="margin-bottom:5px">{{ 'Create a new category'|trans }}</button>
					</div><!-- /well -->
					<div class="well">
						<h4>{{ 'Tags'|trans }}</h4>
						<div class="row">
							{% set length = tags|length %}
							{% if length > 0 %}
							<div class="col-lg-6">
								<ul class="list-unstyled">
							{% for tag in tags|slice(0, (length / 2)|round) %}
									<li><a href="#">{{ tag.name|trans }}</a></li>
							{% endfor %}
								</ul>
							</div>
							<div class="col-lg-6">
								<ul class="list-unstyled">
							{% for tag in tags|slice((length / 2)|round, length) %}
									<li><a href="#">{{ tag.name|trans }}</a></li>
							{% endfor %}
								</ul>
							</div>
							{% else %}
							<div class="col-lg-12">
								<p>{{ 'There are no tags yet'|trans }}</p>
							</div>
							{% endif %}
						</div>
						<!-- Button trigger modal -->
						<button class="btn btn-info btn-block" data-toggle="modal" data-target="#newTag" style="margin-top:5px">{{ 'Create a new tag'|trans }}</button>
					</div><!-- /well -->
				</div>
			</div>
			<!-- New Category Modal -->
			<div class="modal fade" id="newCategory" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
				<div class="modal-dialog">
					<div class="modal-content">
						{{ form_start(new_category_form, {'method': 'POST', 'action': path('rov_blog_manage_articles') }) }}
						<div class="modal-header">
							<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
							<h4 class="modal-title" id="myModalLabel">{{ 'Create a new category'|trans }}</h4>
						</div>
						<div class="modal-body">
								{{ form_row(new_category_form.name) }}
						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-default" data-dismiss="modal">{{ 'Close'|trans }}</button>
							<button type="submit" class="btn btn-primary">{{ 'Save changes'|trans }}</button>
						</div>
						{{ form_end(new_category_form) }}
					</div>
				</div>
			</div>
			<!-- New Tag Modal -->
			<div class="modal fade" id="newTag" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
				<div class="modal-dialog">
					<div class="modal-content">
						{{ form_start(new_tag_form, {'method': 'POST', 'action': path('rov_blog_manage_articles') }) }}
						<div class="modal-header">
							<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
							<h4 class="modal-title" id="myModalLabel">{{ 'Create a new tag'|trans }}</h4>
						</div>
						<div class="modal-body">
							{{ form_row(new_tag_form.name) }}
						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-default" data-dismiss="modal">{{ 'Close'|trans }}</button>
							<button type="submit" class="btn btn-primary">{{ 'Save changes'|trans }}</button>
						</div>
						{{ form_end(new_tag_form) }}
					</div>
				</div>
			</div>
			
		</div>
	</div>
</div>
{% endblock %}
{% block js %}
	{# TableSorter creation #}
	{{ parent() }}
	{% if articles|length > 0 %}
    <script type="text/javascript" src="{{ asset('bundles/rovstart/js/jquery.tablesorter.min.js') }}"></script>
    <script type="text/javascript" src="{{ asset('bundles/rovstart/js/jquery.tablesorter.widgets.min.js') }}"></script>
	<script>
	$(function() {

		$(window).on('resize', function() {amplia_footer()} );
		amplia_footer();

		$.extend($.tablesorter.themes.bootstrap, {
			// these classes are added to the table. To see other table classes available,
			// look here: http://twitter.github.com/bootstrap/base-css.html#tables
			table      : 'table table-bordered table-hover',
			caption    : 'caption',
			header     : 'bootstrap-header', // give the header a gradient background
			footerRow  : '',
			footerCells: '',
			icons      : '', // add "icon-white" to make them white; this icon class is added to the <i> in the header
			sortNone   : 'bootstrap-icon-unsorted',
			sortAsc    : 'icon-chevron-up glyphicon glyphicon-chevron-up',     // includes classes for Bootstrap v2 & v3
			sortDesc   : 'icon-chevron-down glyphicon glyphicon-chevron-down', // includes classes for Bootstrap v2 & v3
			active     : '', // applied when column is sorted
			hover      : '', // use custom css here - bootstrap class may not override it
			filterRow  : '', // filter row class
			even       : '', // odd row zebra striping
			odd        : ''  // even row zebra striping
		});

		// call the tablesorter plugin and apply the uitheme widget
		$("table").tablesorter({
			// this will apply the bootstrap theme if "uitheme" widget is included
			// the widgetOptions.uitheme is no longer required to be set
			theme : "bootstrap",

			widthFixed: true,

			headerTemplate : '{content} {icon}', // new in v2.7. Needed to add the bootstrap icon!

			// widget code contained in the jquery.tablesorter.widgets.js file
			// use the zebra stripe widget if you plan on hiding any rows (filter widget)
			widgets : [ "uitheme", "filter", "zebra" ],

			widgetOptions : {
				// using the default zebra striping class name, so it actually isn't included in the theme variable above
				// this is ONLY needed for bootstrap theming if you are using the filter widget, because rows are hidden
				zebra : ["even", "odd"],

				// reset filters button
				filter_reset : ".reset"

				// set the uitheme widget to use the bootstrap theme class names
				// this is no longer required, if theme is set
				// ,uitheme : "bootstrap"

			}
		})
		.tablesorterPager({

			// target the pager markup - see the HTML block below
			container: $(".ts-pager"),

			// target the pager page select dropdown - choose a page
			cssGoto  : ".pagenum",

			// remove rows from the table to speed up the sort of large tables.
			// setting this to false, only hides the non-visible rows; needed if you plan to add/remove rows with the pager enabled.
			removeRows: false,

			// output string - default is '{page}/{totalPages}';
			// possible variables: {page}, {totalPages}, {filteredPages}, {startRow}, {endRow}, {filteredRows} and {totalRows}
			output: '{startRow} - {endRow} / {filteredRows} ({totalRows})'

		});


	});
	</script>
	{% endif %}
{% endblock %}